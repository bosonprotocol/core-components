/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result, EventFragment } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export interface IBosonConfigHandlerInterface extends utils.Interface {
  contractName: "IBosonConfigHandler";
  functions: {
    "getAccessControllerAddress()": FunctionFragment;
    "getAuthTokenContract(uint8)": FunctionFragment;
    "getBeaconProxyAddress()": FunctionFragment;
    "getBuyerEscalationDepositPercentage()": FunctionFragment;
    "getMaxEscalationResponsePeriod()": FunctionFragment;
    "getMaxResolutionPeriod()": FunctionFragment;
    "getMaxRoyaltyPercentage()": FunctionFragment;
    "getMaxTotalOfferFeePercentage()": FunctionFragment;
    "getMinDisputePeriod()": FunctionFragment;
    "getMinResolutionPeriod()": FunctionFragment;
    "getPriceDiscoveryAddress()": FunctionFragment;
    "getProtocolFee(address,uint256)": FunctionFragment;
    "getProtocolFeeFlatBoson()": FunctionFragment;
    "getProtocolFeePercentage()": FunctionFragment;
    "getProtocolFeeTable(address)": FunctionFragment;
    "getTokenAddress()": FunctionFragment;
    "getTreasuryAddress()": FunctionFragment;
    "getVoucherBeaconAddress()": FunctionFragment;
    "setAccessControllerAddress(address)": FunctionFragment;
    "setAuthTokenContract(uint8,address)": FunctionFragment;
    "setBeaconProxyAddress(address)": FunctionFragment;
    "setBuyerEscalationDepositPercentage(uint256)": FunctionFragment;
    "setMaxEscalationResponsePeriod(uint256)": FunctionFragment;
    "setMaxResolutionPeriod(uint256)": FunctionFragment;
    "setMaxRoyaltyPercentage(uint16)": FunctionFragment;
    "setMaxTotalOfferFeePercentage(uint16)": FunctionFragment;
    "setMinDisputePeriod(uint256)": FunctionFragment;
    "setMinResolutionPeriod(uint256)": FunctionFragment;
    "setPriceDiscoveryAddress(address)": FunctionFragment;
    "setProtocolFeeFlatBoson(uint256)": FunctionFragment;
    "setProtocolFeePercentage(uint256)": FunctionFragment;
    "setProtocolFeeTable(address,uint256[],uint256[])": FunctionFragment;
    "setTokenAddress(address)": FunctionFragment;
    "setTreasuryAddress(address)": FunctionFragment;
    "setVoucherBeaconAddress(address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "getAccessControllerAddress",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getAuthTokenContract",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getBeaconProxyAddress",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getBuyerEscalationDepositPercentage",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getMaxEscalationResponsePeriod",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getMaxResolutionPeriod",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getMaxRoyaltyPercentage",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getMaxTotalOfferFeePercentage",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getMinDisputePeriod",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getMinResolutionPeriod",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getPriceDiscoveryAddress",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getProtocolFee",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getProtocolFeeFlatBoson",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getProtocolFeePercentage",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getProtocolFeeTable",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getTokenAddress",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getTreasuryAddress",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getVoucherBeaconAddress",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "setAccessControllerAddress",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setAuthTokenContract",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "setBeaconProxyAddress",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setBuyerEscalationDepositPercentage",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setMaxEscalationResponsePeriod",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setMaxResolutionPeriod",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setMaxRoyaltyPercentage",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setMaxTotalOfferFeePercentage",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setMinDisputePeriod",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setMinResolutionPeriod",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setPriceDiscoveryAddress",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setProtocolFeeFlatBoson",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setProtocolFeePercentage",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setProtocolFeeTable",
    values: [string, BigNumberish[], BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "setTokenAddress",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setTreasuryAddress",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setVoucherBeaconAddress",
    values: [string]
  ): string;

  decodeFunctionResult(
    functionFragment: "getAccessControllerAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAuthTokenContract",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getBeaconProxyAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getBuyerEscalationDepositPercentage",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMaxEscalationResponsePeriod",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMaxResolutionPeriod",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMaxRoyaltyPercentage",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMaxTotalOfferFeePercentage",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMinDisputePeriod",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMinResolutionPeriod",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPriceDiscoveryAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getProtocolFee",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getProtocolFeeFlatBoson",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getProtocolFeePercentage",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getProtocolFeeTable",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTokenAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTreasuryAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getVoucherBeaconAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setAccessControllerAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setAuthTokenContract",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setBeaconProxyAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setBuyerEscalationDepositPercentage",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setMaxEscalationResponsePeriod",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setMaxResolutionPeriod",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setMaxRoyaltyPercentage",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setMaxTotalOfferFeePercentage",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setMinDisputePeriod",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setMinResolutionPeriod",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setPriceDiscoveryAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setProtocolFeeFlatBoson",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setProtocolFeePercentage",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setProtocolFeeTable",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setTokenAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setTreasuryAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setVoucherBeaconAddress",
    data: BytesLike
  ): Result;

  events: {
    "AccessControllerAddressChanged(address,address)": EventFragment;
    "AuthTokenContractChanged(uint8,address,address)": EventFragment;
    "BeaconProxyAddressChanged(address,address)": EventFragment;
    "BuyerEscalationFeePercentageChanged(uint256,address)": EventFragment;
    "FeeTableUpdated(address,uint256[],uint256[],address)": EventFragment;
    "MaxEscalationResponsePeriodChanged(uint256,address)": EventFragment;
    "MaxPremintedVouchersChanged(uint256,address)": EventFragment;
    "MaxResolutionPeriodChanged(uint256,address)": EventFragment;
    "MaxRoyaltyPercentageChanged(uint16,address)": EventFragment;
    "MaxTotalOfferFeePercentageChanged(uint16,address)": EventFragment;
    "MinDisputePeriodChanged(uint256,address)": EventFragment;
    "MinResolutionPeriodChanged(uint256,address)": EventFragment;
    "PriceDiscoveryAddressChanged(address,address)": EventFragment;
    "ProtocolFeeFlatBosonChanged(uint256,address)": EventFragment;
    "ProtocolFeePercentageChanged(uint256,address)": EventFragment;
    "TokenAddressChanged(address,address)": EventFragment;
    "TreasuryAddressChanged(address,address)": EventFragment;
    "VoucherBeaconAddressChanged(address,address)": EventFragment;
  };

  getEvent(
    nameOrSignatureOrTopic: "AccessControllerAddressChanged"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "AuthTokenContractChanged"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "BeaconProxyAddressChanged"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "BuyerEscalationFeePercentageChanged"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "FeeTableUpdated"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "MaxEscalationResponsePeriodChanged"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "MaxPremintedVouchersChanged"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "MaxResolutionPeriodChanged"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "MaxRoyaltyPercentageChanged"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "MaxTotalOfferFeePercentageChanged"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "MinDisputePeriodChanged"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "MinResolutionPeriodChanged"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "PriceDiscoveryAddressChanged"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ProtocolFeeFlatBosonChanged"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ProtocolFeePercentageChanged"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TokenAddressChanged"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TreasuryAddressChanged"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "VoucherBeaconAddressChanged"
  ): EventFragment;
}

export type AccessControllerAddressChangedEvent = TypedEvent<
  [string, string],
  { accessControllerAddress: string; executedBy: string }
>;

export type AccessControllerAddressChangedEventFilter =
  TypedEventFilter<AccessControllerAddressChangedEvent>;

export type AuthTokenContractChangedEvent = TypedEvent<
  [number, string, string],
  { authTokenType: number; authTokenContract: string; executedBy: string }
>;

export type AuthTokenContractChangedEventFilter =
  TypedEventFilter<AuthTokenContractChangedEvent>;

export type BeaconProxyAddressChangedEvent = TypedEvent<
  [string, string],
  { beaconProxyAddress: string; executedBy: string }
>;

export type BeaconProxyAddressChangedEventFilter =
  TypedEventFilter<BeaconProxyAddressChangedEvent>;

export type BuyerEscalationFeePercentageChangedEvent = TypedEvent<
  [BigNumber, string],
  { buyerEscalationFeePercentage: BigNumber; executedBy: string }
>;

export type BuyerEscalationFeePercentageChangedEventFilter =
  TypedEventFilter<BuyerEscalationFeePercentageChangedEvent>;

export type FeeTableUpdatedEvent = TypedEvent<
  [string, BigNumber[], BigNumber[], string],
  {
    token: string;
    priceRanges: BigNumber[];
    feePercentages: BigNumber[];
    executedBy: string;
  }
>;

export type FeeTableUpdatedEventFilter = TypedEventFilter<FeeTableUpdatedEvent>;

export type MaxEscalationResponsePeriodChangedEvent = TypedEvent<
  [BigNumber, string],
  { maxEscalationResponsePeriod: BigNumber; executedBy: string }
>;

export type MaxEscalationResponsePeriodChangedEventFilter =
  TypedEventFilter<MaxEscalationResponsePeriodChangedEvent>;

export type MaxPremintedVouchersChangedEvent = TypedEvent<
  [BigNumber, string],
  { maxPremintedVouchers: BigNumber; executedBy: string }
>;

export type MaxPremintedVouchersChangedEventFilter =
  TypedEventFilter<MaxPremintedVouchersChangedEvent>;

export type MaxResolutionPeriodChangedEvent = TypedEvent<
  [BigNumber, string],
  { maxResolutionPeriod: BigNumber; executedBy: string }
>;

export type MaxResolutionPeriodChangedEventFilter =
  TypedEventFilter<MaxResolutionPeriodChangedEvent>;

export type MaxRoyaltyPercentageChangedEvent = TypedEvent<
  [number, string],
  { maxRoyaltyPercentage: number; executedBy: string }
>;

export type MaxRoyaltyPercentageChangedEventFilter =
  TypedEventFilter<MaxRoyaltyPercentageChangedEvent>;

export type MaxTotalOfferFeePercentageChangedEvent = TypedEvent<
  [number, string],
  { maxTotalOfferFeePercentage: number; executedBy: string }
>;

export type MaxTotalOfferFeePercentageChangedEventFilter =
  TypedEventFilter<MaxTotalOfferFeePercentageChangedEvent>;

export type MinDisputePeriodChangedEvent = TypedEvent<
  [BigNumber, string],
  { minDisputePeriod: BigNumber; executedBy: string }
>;

export type MinDisputePeriodChangedEventFilter =
  TypedEventFilter<MinDisputePeriodChangedEvent>;

export type MinResolutionPeriodChangedEvent = TypedEvent<
  [BigNumber, string],
  { minResolutionPeriod: BigNumber; executedBy: string }
>;

export type MinResolutionPeriodChangedEventFilter =
  TypedEventFilter<MinResolutionPeriodChangedEvent>;

export type PriceDiscoveryAddressChangedEvent = TypedEvent<
  [string, string],
  { priceDiscoveryAddress: string; executedBy: string }
>;

export type PriceDiscoveryAddressChangedEventFilter =
  TypedEventFilter<PriceDiscoveryAddressChangedEvent>;

export type ProtocolFeeFlatBosonChangedEvent = TypedEvent<
  [BigNumber, string],
  { feeFlatBoson: BigNumber; executedBy: string }
>;

export type ProtocolFeeFlatBosonChangedEventFilter =
  TypedEventFilter<ProtocolFeeFlatBosonChangedEvent>;

export type ProtocolFeePercentageChangedEvent = TypedEvent<
  [BigNumber, string],
  { feePercentage: BigNumber; executedBy: string }
>;

export type ProtocolFeePercentageChangedEventFilter =
  TypedEventFilter<ProtocolFeePercentageChangedEvent>;

export type TokenAddressChangedEvent = TypedEvent<
  [string, string],
  { tokenAddress: string; executedBy: string }
>;

export type TokenAddressChangedEventFilter =
  TypedEventFilter<TokenAddressChangedEvent>;

export type TreasuryAddressChangedEvent = TypedEvent<
  [string, string],
  { treasuryAddress: string; executedBy: string }
>;

export type TreasuryAddressChangedEventFilter =
  TypedEventFilter<TreasuryAddressChangedEvent>;

export type VoucherBeaconAddressChangedEvent = TypedEvent<
  [string, string],
  { voucherBeaconAddress: string; executedBy: string }
>;

export type VoucherBeaconAddressChangedEventFilter =
  TypedEventFilter<VoucherBeaconAddressChangedEvent>;

export interface IBosonConfigHandler extends BaseContract {
  contractName: "IBosonConfigHandler";
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IBosonConfigHandlerInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    getAccessControllerAddress(overrides?: CallOverrides): Promise<[string]>;

    getAuthTokenContract(
      _authTokenType: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getBeaconProxyAddress(overrides?: CallOverrides): Promise<[string]>;

    getBuyerEscalationDepositPercentage(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getMaxEscalationResponsePeriod(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getMaxResolutionPeriod(overrides?: CallOverrides): Promise<[BigNumber]>;

    getMaxRoyaltyPercentage(overrides?: CallOverrides): Promise<[number]>;

    getMaxTotalOfferFeePercentage(overrides?: CallOverrides): Promise<[number]>;

    getMinDisputePeriod(overrides?: CallOverrides): Promise<[BigNumber]>;

    getMinResolutionPeriod(overrides?: CallOverrides): Promise<[BigNumber]>;

    getPriceDiscoveryAddress(overrides?: CallOverrides): Promise<[string]>;

    getProtocolFee(
      _exchangeToken: string,
      _price: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getProtocolFeeFlatBoson(overrides?: CallOverrides): Promise<[BigNumber]>;

    "getProtocolFeePercentage()"(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getProtocolFeePercentage(address,uint256)"(
      _exchangeToken: string,
      _price: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getProtocolFeeTable(
      _tokenAddress: string,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber[], BigNumber[]] & {
        priceRanges: BigNumber[];
        feePercentages: BigNumber[];
      }
    >;

    getTokenAddress(overrides?: CallOverrides): Promise<[string]>;

    getTreasuryAddress(overrides?: CallOverrides): Promise<[string]>;

    getVoucherBeaconAddress(overrides?: CallOverrides): Promise<[string]>;

    setAccessControllerAddress(
      _accessControllerAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setAuthTokenContract(
      _authTokenType: BigNumberish,
      _authTokenContract: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setBeaconProxyAddress(
      _beaconProxyAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setBuyerEscalationDepositPercentage(
      _buyerEscalationDepositPercentage: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setMaxEscalationResponsePeriod(
      _maxEscalationResponsePeriod: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setMaxResolutionPeriod(
      _maxResolutionPeriod: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setMaxRoyaltyPercentage(
      _maxRoyaltyPercentage: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setMaxTotalOfferFeePercentage(
      _maxTotalOfferFeePercentage: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setMinDisputePeriod(
      _minDisputePeriod: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setMinResolutionPeriod(
      _minResolutionPeriod: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setPriceDiscoveryAddress(
      _priceDiscovery: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setProtocolFeeFlatBoson(
      _protocolFeeFlatBoson: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setProtocolFeePercentage(
      _protocolFeePercentage: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setProtocolFeeTable(
      _tokenAddress: string,
      _priceRanges: BigNumberish[],
      _feePercentages: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setTokenAddress(
      _tokenAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setTreasuryAddress(
      _treasuryAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setVoucherBeaconAddress(
      _voucherBeaconAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  getAccessControllerAddress(overrides?: CallOverrides): Promise<string>;

  getAuthTokenContract(
    _authTokenType: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  getBeaconProxyAddress(overrides?: CallOverrides): Promise<string>;

  getBuyerEscalationDepositPercentage(
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getMaxEscalationResponsePeriod(overrides?: CallOverrides): Promise<BigNumber>;

  getMaxResolutionPeriod(overrides?: CallOverrides): Promise<BigNumber>;

  getMaxRoyaltyPercentage(overrides?: CallOverrides): Promise<number>;

  getMaxTotalOfferFeePercentage(overrides?: CallOverrides): Promise<number>;

  getMinDisputePeriod(overrides?: CallOverrides): Promise<BigNumber>;

  getMinResolutionPeriod(overrides?: CallOverrides): Promise<BigNumber>;

  getPriceDiscoveryAddress(overrides?: CallOverrides): Promise<string>;

  getProtocolFee(
    _exchangeToken: string,
    _price: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getProtocolFeeFlatBoson(overrides?: CallOverrides): Promise<BigNumber>;

  "getProtocolFeePercentage()"(overrides?: CallOverrides): Promise<BigNumber>;

  "getProtocolFeePercentage(address,uint256)"(
    _exchangeToken: string,
    _price: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getProtocolFeeTable(
    _tokenAddress: string,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber[], BigNumber[]] & {
      priceRanges: BigNumber[];
      feePercentages: BigNumber[];
    }
  >;

  getTokenAddress(overrides?: CallOverrides): Promise<string>;

  getTreasuryAddress(overrides?: CallOverrides): Promise<string>;

  getVoucherBeaconAddress(overrides?: CallOverrides): Promise<string>;

  setAccessControllerAddress(
    _accessControllerAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setAuthTokenContract(
    _authTokenType: BigNumberish,
    _authTokenContract: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setBeaconProxyAddress(
    _beaconProxyAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setBuyerEscalationDepositPercentage(
    _buyerEscalationDepositPercentage: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setMaxEscalationResponsePeriod(
    _maxEscalationResponsePeriod: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setMaxResolutionPeriod(
    _maxResolutionPeriod: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setMaxRoyaltyPercentage(
    _maxRoyaltyPercentage: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setMaxTotalOfferFeePercentage(
    _maxTotalOfferFeePercentage: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setMinDisputePeriod(
    _minDisputePeriod: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setMinResolutionPeriod(
    _minResolutionPeriod: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setPriceDiscoveryAddress(
    _priceDiscovery: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setProtocolFeeFlatBoson(
    _protocolFeeFlatBoson: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setProtocolFeePercentage(
    _protocolFeePercentage: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setProtocolFeeTable(
    _tokenAddress: string,
    _priceRanges: BigNumberish[],
    _feePercentages: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setTokenAddress(
    _tokenAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setTreasuryAddress(
    _treasuryAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setVoucherBeaconAddress(
    _voucherBeaconAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    getAccessControllerAddress(overrides?: CallOverrides): Promise<string>;

    getAuthTokenContract(
      _authTokenType: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getBeaconProxyAddress(overrides?: CallOverrides): Promise<string>;

    getBuyerEscalationDepositPercentage(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMaxEscalationResponsePeriod(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMaxResolutionPeriod(overrides?: CallOverrides): Promise<BigNumber>;

    getMaxRoyaltyPercentage(overrides?: CallOverrides): Promise<number>;

    getMaxTotalOfferFeePercentage(overrides?: CallOverrides): Promise<number>;

    getMinDisputePeriod(overrides?: CallOverrides): Promise<BigNumber>;

    getMinResolutionPeriod(overrides?: CallOverrides): Promise<BigNumber>;

    getPriceDiscoveryAddress(overrides?: CallOverrides): Promise<string>;

    getProtocolFee(
      _exchangeToken: string,
      _price: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getProtocolFeeFlatBoson(overrides?: CallOverrides): Promise<BigNumber>;

    "getProtocolFeePercentage()"(overrides?: CallOverrides): Promise<BigNumber>;

    "getProtocolFeePercentage(address,uint256)"(
      _exchangeToken: string,
      _price: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getProtocolFeeTable(
      _tokenAddress: string,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber[], BigNumber[]] & {
        priceRanges: BigNumber[];
        feePercentages: BigNumber[];
      }
    >;

    getTokenAddress(overrides?: CallOverrides): Promise<string>;

    getTreasuryAddress(overrides?: CallOverrides): Promise<string>;

    getVoucherBeaconAddress(overrides?: CallOverrides): Promise<string>;

    setAccessControllerAddress(
      _accessControllerAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setAuthTokenContract(
      _authTokenType: BigNumberish,
      _authTokenContract: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setBeaconProxyAddress(
      _beaconProxyAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setBuyerEscalationDepositPercentage(
      _buyerEscalationDepositPercentage: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setMaxEscalationResponsePeriod(
      _maxEscalationResponsePeriod: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setMaxResolutionPeriod(
      _maxResolutionPeriod: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setMaxRoyaltyPercentage(
      _maxRoyaltyPercentage: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setMaxTotalOfferFeePercentage(
      _maxTotalOfferFeePercentage: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setMinDisputePeriod(
      _minDisputePeriod: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setMinResolutionPeriod(
      _minResolutionPeriod: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setPriceDiscoveryAddress(
      _priceDiscovery: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setProtocolFeeFlatBoson(
      _protocolFeeFlatBoson: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setProtocolFeePercentage(
      _protocolFeePercentage: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setProtocolFeeTable(
      _tokenAddress: string,
      _priceRanges: BigNumberish[],
      _feePercentages: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    setTokenAddress(
      _tokenAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setTreasuryAddress(
      _treasuryAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setVoucherBeaconAddress(
      _voucherBeaconAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "AccessControllerAddressChanged(address,address)"(
      accessControllerAddress?: string | null,
      executedBy?: string | null
    ): AccessControllerAddressChangedEventFilter;
    AccessControllerAddressChanged(
      accessControllerAddress?: string | null,
      executedBy?: string | null
    ): AccessControllerAddressChangedEventFilter;

    "AuthTokenContractChanged(uint8,address,address)"(
      authTokenType?: BigNumberish | null,
      authTokenContract?: string | null,
      executedBy?: string | null
    ): AuthTokenContractChangedEventFilter;
    AuthTokenContractChanged(
      authTokenType?: BigNumberish | null,
      authTokenContract?: string | null,
      executedBy?: string | null
    ): AuthTokenContractChangedEventFilter;

    "BeaconProxyAddressChanged(address,address)"(
      beaconProxyAddress?: string | null,
      executedBy?: string | null
    ): BeaconProxyAddressChangedEventFilter;
    BeaconProxyAddressChanged(
      beaconProxyAddress?: string | null,
      executedBy?: string | null
    ): BeaconProxyAddressChangedEventFilter;

    "BuyerEscalationFeePercentageChanged(uint256,address)"(
      buyerEscalationFeePercentage?: null,
      executedBy?: string | null
    ): BuyerEscalationFeePercentageChangedEventFilter;
    BuyerEscalationFeePercentageChanged(
      buyerEscalationFeePercentage?: null,
      executedBy?: string | null
    ): BuyerEscalationFeePercentageChangedEventFilter;

    "FeeTableUpdated(address,uint256[],uint256[],address)"(
      token?: string | null,
      priceRanges?: null,
      feePercentages?: null,
      executedBy?: string | null
    ): FeeTableUpdatedEventFilter;
    FeeTableUpdated(
      token?: string | null,
      priceRanges?: null,
      feePercentages?: null,
      executedBy?: string | null
    ): FeeTableUpdatedEventFilter;

    "MaxEscalationResponsePeriodChanged(uint256,address)"(
      maxEscalationResponsePeriod?: null,
      executedBy?: string | null
    ): MaxEscalationResponsePeriodChangedEventFilter;
    MaxEscalationResponsePeriodChanged(
      maxEscalationResponsePeriod?: null,
      executedBy?: string | null
    ): MaxEscalationResponsePeriodChangedEventFilter;

    "MaxPremintedVouchersChanged(uint256,address)"(
      maxPremintedVouchers?: null,
      executedBy?: string | null
    ): MaxPremintedVouchersChangedEventFilter;
    MaxPremintedVouchersChanged(
      maxPremintedVouchers?: null,
      executedBy?: string | null
    ): MaxPremintedVouchersChangedEventFilter;

    "MaxResolutionPeriodChanged(uint256,address)"(
      maxResolutionPeriod?: null,
      executedBy?: string | null
    ): MaxResolutionPeriodChangedEventFilter;
    MaxResolutionPeriodChanged(
      maxResolutionPeriod?: null,
      executedBy?: string | null
    ): MaxResolutionPeriodChangedEventFilter;

    "MaxRoyaltyPercentageChanged(uint16,address)"(
      maxRoyaltyPercentage?: null,
      executedBy?: string | null
    ): MaxRoyaltyPercentageChangedEventFilter;
    MaxRoyaltyPercentageChanged(
      maxRoyaltyPercentage?: null,
      executedBy?: string | null
    ): MaxRoyaltyPercentageChangedEventFilter;

    "MaxTotalOfferFeePercentageChanged(uint16,address)"(
      maxTotalOfferFeePercentage?: null,
      executedBy?: string | null
    ): MaxTotalOfferFeePercentageChangedEventFilter;
    MaxTotalOfferFeePercentageChanged(
      maxTotalOfferFeePercentage?: null,
      executedBy?: string | null
    ): MaxTotalOfferFeePercentageChangedEventFilter;

    "MinDisputePeriodChanged(uint256,address)"(
      minDisputePeriod?: null,
      executedBy?: string | null
    ): MinDisputePeriodChangedEventFilter;
    MinDisputePeriodChanged(
      minDisputePeriod?: null,
      executedBy?: string | null
    ): MinDisputePeriodChangedEventFilter;

    "MinResolutionPeriodChanged(uint256,address)"(
      minResolutionPeriod?: null,
      executedBy?: string | null
    ): MinResolutionPeriodChangedEventFilter;
    MinResolutionPeriodChanged(
      minResolutionPeriod?: null,
      executedBy?: string | null
    ): MinResolutionPeriodChangedEventFilter;

    "PriceDiscoveryAddressChanged(address,address)"(
      priceDiscoveryAddress?: string | null,
      executedBy?: string | null
    ): PriceDiscoveryAddressChangedEventFilter;
    PriceDiscoveryAddressChanged(
      priceDiscoveryAddress?: string | null,
      executedBy?: string | null
    ): PriceDiscoveryAddressChangedEventFilter;

    "ProtocolFeeFlatBosonChanged(uint256,address)"(
      feeFlatBoson?: null,
      executedBy?: string | null
    ): ProtocolFeeFlatBosonChangedEventFilter;
    ProtocolFeeFlatBosonChanged(
      feeFlatBoson?: null,
      executedBy?: string | null
    ): ProtocolFeeFlatBosonChangedEventFilter;

    "ProtocolFeePercentageChanged(uint256,address)"(
      feePercentage?: null,
      executedBy?: string | null
    ): ProtocolFeePercentageChangedEventFilter;
    ProtocolFeePercentageChanged(
      feePercentage?: null,
      executedBy?: string | null
    ): ProtocolFeePercentageChangedEventFilter;

    "TokenAddressChanged(address,address)"(
      tokenAddress?: string | null,
      executedBy?: string | null
    ): TokenAddressChangedEventFilter;
    TokenAddressChanged(
      tokenAddress?: string | null,
      executedBy?: string | null
    ): TokenAddressChangedEventFilter;

    "TreasuryAddressChanged(address,address)"(
      treasuryAddress?: string | null,
      executedBy?: string | null
    ): TreasuryAddressChangedEventFilter;
    TreasuryAddressChanged(
      treasuryAddress?: string | null,
      executedBy?: string | null
    ): TreasuryAddressChangedEventFilter;

    "VoucherBeaconAddressChanged(address,address)"(
      voucherBeaconAddress?: string | null,
      executedBy?: string | null
    ): VoucherBeaconAddressChangedEventFilter;
    VoucherBeaconAddressChanged(
      voucherBeaconAddress?: string | null,
      executedBy?: string | null
    ): VoucherBeaconAddressChangedEventFilter;
  };

  estimateGas: {
    getAccessControllerAddress(overrides?: CallOverrides): Promise<BigNumber>;

    getAuthTokenContract(
      _authTokenType: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getBeaconProxyAddress(overrides?: CallOverrides): Promise<BigNumber>;

    getBuyerEscalationDepositPercentage(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMaxEscalationResponsePeriod(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMaxResolutionPeriod(overrides?: CallOverrides): Promise<BigNumber>;

    getMaxRoyaltyPercentage(overrides?: CallOverrides): Promise<BigNumber>;

    getMaxTotalOfferFeePercentage(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMinDisputePeriod(overrides?: CallOverrides): Promise<BigNumber>;

    getMinResolutionPeriod(overrides?: CallOverrides): Promise<BigNumber>;

    getPriceDiscoveryAddress(overrides?: CallOverrides): Promise<BigNumber>;

    getProtocolFee(
      _exchangeToken: string,
      _price: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getProtocolFeeFlatBoson(overrides?: CallOverrides): Promise<BigNumber>;

    "getProtocolFeePercentage()"(overrides?: CallOverrides): Promise<BigNumber>;

    "getProtocolFeePercentage(address,uint256)"(
      _exchangeToken: string,
      _price: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getProtocolFeeTable(
      _tokenAddress: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTokenAddress(overrides?: CallOverrides): Promise<BigNumber>;

    getTreasuryAddress(overrides?: CallOverrides): Promise<BigNumber>;

    getVoucherBeaconAddress(overrides?: CallOverrides): Promise<BigNumber>;

    setAccessControllerAddress(
      _accessControllerAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setAuthTokenContract(
      _authTokenType: BigNumberish,
      _authTokenContract: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setBeaconProxyAddress(
      _beaconProxyAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setBuyerEscalationDepositPercentage(
      _buyerEscalationDepositPercentage: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setMaxEscalationResponsePeriod(
      _maxEscalationResponsePeriod: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setMaxResolutionPeriod(
      _maxResolutionPeriod: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setMaxRoyaltyPercentage(
      _maxRoyaltyPercentage: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setMaxTotalOfferFeePercentage(
      _maxTotalOfferFeePercentage: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setMinDisputePeriod(
      _minDisputePeriod: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setMinResolutionPeriod(
      _minResolutionPeriod: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setPriceDiscoveryAddress(
      _priceDiscovery: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setProtocolFeeFlatBoson(
      _protocolFeeFlatBoson: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setProtocolFeePercentage(
      _protocolFeePercentage: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setProtocolFeeTable(
      _tokenAddress: string,
      _priceRanges: BigNumberish[],
      _feePercentages: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setTokenAddress(
      _tokenAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setTreasuryAddress(
      _treasuryAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setVoucherBeaconAddress(
      _voucherBeaconAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getAccessControllerAddress(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getAuthTokenContract(
      _authTokenType: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getBeaconProxyAddress(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getBuyerEscalationDepositPercentage(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getMaxEscalationResponsePeriod(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getMaxResolutionPeriod(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getMaxRoyaltyPercentage(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getMaxTotalOfferFeePercentage(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getMinDisputePeriod(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getMinResolutionPeriod(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getPriceDiscoveryAddress(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getProtocolFee(
      _exchangeToken: string,
      _price: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getProtocolFeeFlatBoson(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getProtocolFeePercentage()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getProtocolFeePercentage(address,uint256)"(
      _exchangeToken: string,
      _price: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getProtocolFeeTable(
      _tokenAddress: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTokenAddress(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getTreasuryAddress(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getVoucherBeaconAddress(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setAccessControllerAddress(
      _accessControllerAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setAuthTokenContract(
      _authTokenType: BigNumberish,
      _authTokenContract: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setBeaconProxyAddress(
      _beaconProxyAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setBuyerEscalationDepositPercentage(
      _buyerEscalationDepositPercentage: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setMaxEscalationResponsePeriod(
      _maxEscalationResponsePeriod: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setMaxResolutionPeriod(
      _maxResolutionPeriod: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setMaxRoyaltyPercentage(
      _maxRoyaltyPercentage: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setMaxTotalOfferFeePercentage(
      _maxTotalOfferFeePercentage: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setMinDisputePeriod(
      _minDisputePeriod: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setMinResolutionPeriod(
      _minResolutionPeriod: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setPriceDiscoveryAddress(
      _priceDiscovery: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setProtocolFeeFlatBoson(
      _protocolFeeFlatBoson: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setProtocolFeePercentage(
      _protocolFeePercentage: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setProtocolFeeTable(
      _tokenAddress: string,
      _priceRanges: BigNumberish[],
      _feePercentages: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setTokenAddress(
      _tokenAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setTreasuryAddress(
      _treasuryAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setVoucherBeaconAddress(
      _voucherBeaconAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
