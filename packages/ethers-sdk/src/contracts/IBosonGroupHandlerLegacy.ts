/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { BaseContract, BigNumber, BigNumberish, Signer, utils } from "ethers";
import { EventFragment } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export declare namespace BosonTypes {
  export type GroupStruct = {
    id: BigNumberish;
    sellerId: BigNumberish;
    offerIds: BigNumberish[];
  };

  export type GroupStructOutput = [BigNumber, BigNumber, BigNumber[]] & {
    id: BigNumber;
    sellerId: BigNumber;
    offerIds: BigNumber[];
  };

  export type ConditionStruct = {
    method: BigNumberish;
    tokenType: BigNumberish;
    tokenAddress: string;
    tokenId: BigNumberish;
    threshold: BigNumberish;
    maxCommits: BigNumberish;
  };

  export type ConditionStructOutput = [
    number,
    number,
    string,
    BigNumber,
    BigNumber,
    BigNumber
  ] & {
    method: number;
    tokenType: number;
    tokenAddress: string;
    tokenId: BigNumber;
    threshold: BigNumber;
    maxCommits: BigNumber;
  };
}

export interface IBosonGroupHandlerLegacyInterface extends utils.Interface {
  contractName: "IBosonGroupHandlerLegacy";
  functions: {};

  events: {
    "GroupCreated(uint256,uint256,tuple,tuple,address)": EventFragment;
    "GroupUpdated(uint256,uint256,tuple,tuple,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "GroupCreated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "GroupUpdated"): EventFragment;
}

export type GroupCreatedEvent = TypedEvent<
  [
    BigNumber,
    BigNumber,
    BosonTypes.GroupStructOutput,
    BosonTypes.ConditionStructOutput,
    string
  ],
  {
    groupId: BigNumber;
    sellerId: BigNumber;
    group: BosonTypes.GroupStructOutput;
    condition: BosonTypes.ConditionStructOutput;
    executedBy: string;
  }
>;

export type GroupCreatedEventFilter = TypedEventFilter<GroupCreatedEvent>;

export type GroupUpdatedEvent = TypedEvent<
  [
    BigNumber,
    BigNumber,
    BosonTypes.GroupStructOutput,
    BosonTypes.ConditionStructOutput,
    string
  ],
  {
    groupId: BigNumber;
    sellerId: BigNumber;
    group: BosonTypes.GroupStructOutput;
    condition: BosonTypes.ConditionStructOutput;
    executedBy: string;
  }
>;

export type GroupUpdatedEventFilter = TypedEventFilter<GroupUpdatedEvent>;

export interface IBosonGroupHandlerLegacy extends BaseContract {
  contractName: "IBosonGroupHandlerLegacy";
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IBosonGroupHandlerLegacyInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {};

  callStatic: {};

  filters: {
    "GroupCreated(uint256,uint256,tuple,tuple,address)"(
      groupId?: BigNumberish | null,
      sellerId?: BigNumberish | null,
      group?: null,
      condition?: null,
      executedBy?: string | null
    ): GroupCreatedEventFilter;
    GroupCreated(
      groupId?: BigNumberish | null,
      sellerId?: BigNumberish | null,
      group?: null,
      condition?: null,
      executedBy?: string | null
    ): GroupCreatedEventFilter;

    "GroupUpdated(uint256,uint256,tuple,tuple,address)"(
      groupId?: BigNumberish | null,
      sellerId?: BigNumberish | null,
      group?: null,
      condition?: null,
      executedBy?: string | null
    ): GroupUpdatedEventFilter;
    GroupUpdated(
      groupId?: BigNumberish | null,
      sellerId?: BigNumberish | null,
      group?: null,
      condition?: null,
      executedBy?: string | null
    ): GroupUpdatedEventFilter;
  };

  estimateGas: {};

  populateTransaction: {};
}
