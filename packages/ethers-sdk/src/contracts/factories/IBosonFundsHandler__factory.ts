/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IBosonFundsHandler,
  IBosonFundsHandlerInterface,
} from "../IBosonFundsHandler";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "sellerId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "executedBy",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsDeposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "entityId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "exchangeToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "executedBy",
        type: "address",
      },
    ],
    name: "FundsEncumbered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "exchangeId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "entityId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "exchangeToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "executedBy",
        type: "address",
      },
    ],
    name: "FundsReleased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "sellerId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "withdrawnTo",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "executedBy",
        type: "address",
      },
    ],
    name: "FundsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "exchangeId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "exchangeToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "executedBy",
        type: "address",
      },
    ],
    name: "ProtocolFeeCollected",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_sellerId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "depositFunds",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_entityId",
        type: "uint256",
      },
    ],
    name: "getAvailableFunds",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenAddress",
            type: "address",
          },
          {
            internalType: "string",
            name: "tokenName",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "availableAmount",
            type: "uint256",
          },
        ],
        internalType: "struct BosonTypes.Funds[]",
        name: "availableFunds",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_entityId",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_tokenList",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_tokenAmounts",
        type: "uint256[]",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokenList",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_tokenAmounts",
        type: "uint256[]",
      },
    ],
    name: "withdrawProtocolFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IBosonFundsHandler__factory {
  static readonly abi = _abi;
  static createInterface(): IBosonFundsHandlerInterface {
    return new utils.Interface(_abi) as IBosonFundsHandlerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IBosonFundsHandler {
    return new Contract(address, _abi, signerOrProvider) as IBosonFundsHandler;
  }
}
