/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  ProtocolDiamond,
  ProtocolDiamondInterface,
  IDiamondCut,
} from "../ProtocolDiamond";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAccessControl",
        name: "_accessController",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "_facetCuts",
        type: "tuple[]",
      },
      {
        internalType: "bytes4[]",
        name: "_interfaceIds",
        type: "bytes4[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

export class ProtocolDiamond__factory {
  static readonly abi = _abi;
  static createInterface(): ProtocolDiamondInterface {
    return new utils.Interface(_abi) as ProtocolDiamondInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProtocolDiamond {
    return new Contract(address, _abi, signerOrProvider) as ProtocolDiamond;
  }
}
